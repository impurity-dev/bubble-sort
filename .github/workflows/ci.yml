name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  ci:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache dependencies
        run: deno cache mod.ts # replace with your main library entry

      - name: Check formatting
        run: deno fmt --check

      - name: Lint
        run: deno lint

      - name: Type Check
        run: deno check mod.ts # can also point to src/ or multiple files

      - name: Run tests
        run: deno test --allow-all
  publish:
    runs-on: ubuntu-latest
    needs: ci
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Bump deno.json version from tag
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          echo "Updating deno.json version to $TAG_VERSION"
          deno run --allow-read --allow-write <<'EOF'
          const tagVersion = Deno.env.get("TAG_VERSION");
          const file = "deno.json";
          const data = JSON.parse(Deno.readTextFileSync(file));
          data.version = tagVersion;
          Deno.writeTextFileSync(file, JSON.stringify(data, null, 2) + "\n");
          EOF
        env:
          TAG_VERSION: "${GITHUB_REF#refs/tags/v}"

      # - name: Publish to JSR
      #   run: deno publish
      #   env:
      #     JSR_TOKEN: ${{ secrets.JSR_TOKEN }}